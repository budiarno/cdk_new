--- neutrino-mp-tangos.org/acinclude.m4
+++ neutrino-mp-tangos/acinclude.m4
@@ -342,7 +342,7 @@
 AC_ARG_WITH(boxmodel,
 	[  --with-boxmodel         valid for coolstream: hd1, hd2
                           valid for generic: raspi
-                          valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, hs7110, hs7810a, hs7119, hs7819, dp7000, cuberevo, cuberevo_mini, cuberevo_mini2, cuberevo_250hd, cuberevo_2000hd, cuberevo_3000hd, ipbox9900, ipbox99, ipbox55, arivalink200, tf7700, hl101
+                          valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, hs7110, hs7420, hs7810a, hs7119, hs7429, hs7819, cuberevo, cuberevo_mini, cuberevo_mini2, cuberevo_250hd, cuberevo_2000hd, cuberevo_3000hd, ipbox9900, ipbox99, ipbox55, arivalink200, tf7700, hl101
                           valid for spark: spark, spark7162],
 	[case "${withval}" in
 		hd1|hd2)
@@ -412,8 +412,10 @@
 AM_CONDITIONAL(BOXMODEL_FORTIS_HDBOX,test "$BOXMODEL" = "fortis_hdbox")
 AM_CONDITIONAL(BOXMODEL_OCTAGON1008,test "$BOXMODEL" = "octagon1008")
 AM_CONDITIONAL(BOXMODEL_HS7110,test "$BOXMODEL" = "hs7110")
+AM_CONDITIONAL(BOXMODEL_HS7420,test "$BOXMODEL" = "hs7420")
 AM_CONDITIONAL(BOXMODEL_HS7810A,test "$BOXMODEL" = "hs7810a")
 AM_CONDITIONAL(BOXMODEL_HS7119,test "$BOXMODEL" = "hs7119")
+AM_CONDITIONAL(BOXMODEL_HS7429,test "$BOXMODEL" = "hs7429")
 AM_CONDITIONAL(BOXMODEL_HS7819,test "$BOXMODEL" = "hs7819")
 AM_CONDITIONAL(BOXMODEL_DP7000,test "$BOXMODEL" = "dp7000")
 
@@ -471,10 +473,14 @@
 	AC_DEFINE(BOXMODEL_OCTAGON1008, 1, [octagon1008])
 elif test "$BOXMODEL" = "hs7110"; then
 	AC_DEFINE(BOXMODEL_HS7110, 1, [hs7110])
+elif test "$BOXMODEL" = "hs7420"; then
+	AC_DEFINE(BOXMODEL_HS7420, 1, [hs7420])
 elif test "$BOXMODEL" = "hs7810a"; then
 	AC_DEFINE(BOXMODEL_HS7810A, 1, [hs7810a])
 elif test "$BOXMODEL" = "hs7119"; then
 	AC_DEFINE(BOXMODEL_HS7119, 1, [hs7119])
+elif test "$BOXMODEL" = "hs7429"; then
+	AC_DEFINE(BOXMODEL_HS7429, 1, [hs7429])
 elif test "$BOXMODEL" = "hs7819"; then
 	AC_DEFINE(BOXMODEL_HS7819, 1, [hs7819])
 elif test "$BOXMODEL" = "dp7000"; then
--- neutrino-mp-tangos.org/src/neutrino.cpp
+++ neutrino-mp-tangos/src/neutrino.cpp
@@ -4448,6 +4448,9 @@
 			CVFD::getInstance()->Clear();
 			CVFD::getInstance()->setMode(CVFD::MODE_STANDBY);
 		}
+#if defined (FORTIS_HDBOX) || defined (TF7700)
+		CVFD::getInstance()->setlcdparameter(g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS], 0);
+#endif
 		CVFD::getInstance()->setBacklight(g_settings.backlight_standby);
 
 		InfoClock->enableInfoClock(false);
@@ -4479,7 +4482,11 @@
 		// Active standby off
 		powerManager->SetStandby(false, false);
 		CVFD::getInstance()->setMode(CVFD::MODE_TVRADIO);
-		CVFD::getInstance()->ShowText("resume");
+#if defined (FORTIS_HDBOX) || defined (TF7700)
+		CVFD::getInstance()->setlcdparameter(g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS], 1);
+#endif
+		CVFD::getInstance()->ClearIcons();
+		CVFD::getInstance()->ShowText("Resume");
 		cpuFreq->SetCpuFreq(g_settings.cpufreq * 1000 * 1000);
 		videoDecoder->Standby(false);
 		CEpgScan::getInstance()->Stop();
--- neutrino-mp-tangos/src/driver/simple_display.cpp.org
+++ neutrino-mp-tangos/src/driver/simple_display.cpp
@@ -35,6 +35,9 @@
 //#include <math.h>
 #include <sys/stat.h>
 #if HAVE_SPARK_HARDWARE
+struct semaphore {
+	int dummy;
+};
 #include <aotom_main.h>
 #define DISPLAY_DEV "/dev/vfd"
 #include <zapit/zapit.h>
--- neutrino-mp-tangos.org/src/driver/vfd.cpp
+++ neutrino-mp-tangos/src/driver/vfd.cpp
@@ -52,21 +52,30 @@
 #include <stropts.h>
 #define VFD_DEVICE "/dev/vfd"
 
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_TF7700)
 #define VFDLENGTH 8
-#elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#elif defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500)
 #define VFDLENGTH 12
-#elif defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819) || defined (BOXMODEL_CUBEREVO_250HD) || defined (BOXMODEL_IPBOX55)
+#elif defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_CUBEREVO_250HD) \
+ || defined (BOXMODEL_IPBOX55)
 #define VFDLENGTH 4
 #elif defined (BOXMODEL_HS7110)
 #define VFDLENGTH 0
-#elif defined (BOXMODEL_IPBOX9900) || defined (BOXMODEL_IPBOX99)
+#elif defined (BOXMODEL_IPBOX9900) \
+ || defined (BOXMODEL_IPBOX99)
 #define VFDLENGTH 14
 #else
 #define VFDLENGTH 16
 #endif
 
-#define SCROLL_TIME 100000
+#define SCROLL_TIME 500000
 
 bool invert = false;
 char g_str[64];
@@ -120,7 +129,8 @@
 	}
 }
 
-#if defined (BOXMODEL_UFS910) || defined (BOXMODEL_UFS922)
+#if defined (BOXMODEL_UFS910) \
+ || defined (BOXMODEL_UFS922)
 static void writeCG (unsigned char adress, unsigned char pixeldata[5])
 {
 	struct vfd_ioctl_data data;
@@ -140,7 +150,7 @@
 {
 	if (blocked)
 	{
-		printf("[CVFD] - blocked\n");
+	printf("[CVFD] - blocked\n");
 		usleep(SCROLL_TIME);
 	}
 
@@ -227,7 +237,7 @@
 
 	if (len > VFDLENGTH)
 	{
-		printf("CVFD::ThreadScrollText: [%s], length %d\n", str, len);
+	printf("CVFD::ThreadScrollText: [%s], length %d\n", str, len);
 		memset(buf, ' ', (len + VFDLENGTH));
 		memcpy(buf, str, len);
 
@@ -429,7 +439,7 @@
 
 	brightness = dimm;
 
-printf("CVFD::setlcdparameter dimm %d power %d\n", dimm, power);
+	printf("CVFD::setlcdparameter dimm %d power %d\n", dimm, power);
 #if !HAVE_DUCKBOX_HARDWARE
 	int ret = ioctl(fd, IOC_FP_SET_BRIGHT, dimm);
 	if(ret < 0)
@@ -437,51 +447,57 @@
 #else
 // Brightness
 	struct vfd_ioctl_data data;
-#if !defined (BOXMODEL_HS7810A) && !defined (BOXMODEL_HS7119) && !defined (BOXMODEL_HS7819)
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
 	data.start = brightness & 0x07;
 	data.length = 0;
 	write_to_vfd(VFDBRIGHTNESS, &data);
-#endif
-#if defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#if defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500)
 	usleep(100000);
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
-	data.start = 0;
-	data.length = 5;
 	if (power) {
-		data.data[0] = 0x01; // red led
+		data.start = 0x01; // red led
 	}
 	else
 	{
-		data.data[0] = 0xf2; // cross plus blue led
-	}
-	data.start = 0;
-	data.data[4] = 0; // off
+		data.start = 0xf2; // cross plus blue led
+	}
+	data.data[3] = 0; // off
+	data.data[0] = 0;
+	data.data[1] = 0;
+	data.data[4] = 0;
+	data.length = 5;
+	write_to_vfd(VFDSETLED, &data);
+	usleep(100000);
+	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+	if (power) {
+		data.start = 0xf2; // cross plus blue led
+	}
+	else
+	{
+		data.start = 0x01; // red led
+	}
+	data.data[3] = brightness * 2;
+	data.data[0] = 0;
+	data.data[1] = 0;
+	data.data[4] = 0;
 	data.length = 5;
 	write_to_vfd(VFDPWRLED, &data);
-	usleep(100000);
+#elif defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_HS7819)
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
-	data.start = 0;
+	data.start = 0x02; // logo
+	data.data[3] = (brightness & 0x07);
+	data.data[0] = 0;
+	data.data[1] = 0;
+	data.data[4] = 0;
 	data.length = 5;
-	if (power) {
-		data.data[0] = 0xf2; // cross plus blue led
-	}
-	else
-	{
-		data.data[0] = 0x01; // red led
-	}
-	data.start = 0;
-	data.data[4] = brightness*2;
-	data.length = 5;
-	write_to_vfd(VFDPWRLED, &data);
-#elif defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7819)
-	memset(&data, 0, sizeof(struct vfd_ioctl_data));
-	data.start = 0;
-	data.data[0] = 0x02; // logo
-	data.data[4] = (brightness & 0x07);
-	data.length = 5;
-	write_to_vfd(VFDPWRLED, &data);
-#elif !defined (BOXMODEL_UFS912) && !defined (BOXMODEL_UFS913) && !defined (BOXMODEL_OCTAGON1008)
+	write_to_vfd(VFDSETLED, &data);
+#elif !defined (BOXMODEL_UFS912) \
+ && !defined (BOXMODEL_UFS913) \
+ && !defined (BOXMODEL_OCTAGON1008)
 // Power on/off
 	if (power) {
 		data.start = 0x01;
@@ -606,7 +622,7 @@
 {
 	if(fd < 0) return;
 
-printf("CVFD::showServicename: %s\n", name.c_str());
+	printf("CVFD::showServicename: %s\n", name.c_str());
 	servicename = name;
 	service_number = number;
 
@@ -632,49 +648,70 @@
 		ShowIcon(FP_ICON_CAM1, false);
 		return;
 	}
-	if (fd >= 0 && showclock) {
-		if (mode == MODE_STANDBY || ( g_settings.lcd_info_line && (MODE_TVRADIO == mode))) {
+	if (fd >= 0 && showclock)
+	{
+		if (mode == MODE_STANDBY || ( g_settings.lcd_info_line && (MODE_TVRADIO == mode)))
+		{
 			char timestr[21];
 			struct timeb tm;
 			struct tm * t;
-			static int hour = 0, minute = 0;
+			static int hour = 0, minute = 0, second = 0;
 
 			ftime(&tm);
 			t = localtime(&tm.time);
-			if(force || ( switch_name_time_cnt == 0 && ((hour != t->tm_hour) || (minute != t->tm_min))) ) {
+			if(force || ( switch_name_time_cnt == 0 && ((hour != t->tm_hour) || (minute != t->tm_min) || (second != t->tm_sec))) )
+			{
 				hour = t->tm_hour;
 				minute = t->tm_min;
-#if !defined (BOXMODEL_HS7810A) && !defined (BOXMODEL_HS7819)
-#if defined (BOXMODEL_OCTAGON1008)
-				ShowIcon(ICON_COLON2, true);
-#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_CUBEREVO_250HD)
+				second = t->tm_sec;
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429)
+
+				ShowIcon(ICON_COLON2, second % 2 == 0 ? true : false);
 				strftime(timestr, 5, "%H%M", t);
+				ShowText(timestr);
+#elif defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7819)
+
+				ShowIcon(ICON_COLON, second % 2 == 0 ? true : false);
+				strftime(timestr, 5, "%H%M", t);
+				ShowText(timestr);
+#elif defined (BOXMODEL_FORTIS_HDBOX)
+				ShowIcon(ICON_COLON3, second % 2 == 0 ? true : false);
+				strftime(timestr, 13, "        %H%M", t);
+				ShowText(timestr);
+#elif defined (BOXMODEL_CUBEREVO_250HD)
+				strftime(timestr, 5, "%H%M", t);
+				ShowText(timestr);
 #else
-				strftime(timestr, 6, "%H:%M", t);
-#endif
-				ShowText(timestr);
-#else //HS7810A or HS7819, string should not scroll
-				strftime(timestr, 6, "%H:%M", t);
-				struct vfd_ioctl_data data;
-				memset(data.data, ' ', 6);
-				memcpy (data.data, timestr, 6);
-				data.start = 0;
-				data.length = 5;
-				write_to_vfd(VFDDISPLAYCHARS, &data);
-#endif
-				if (support_text) {
+//				strftime(timestr, 6, "%H:%M", t);
+//				ShowText(timestr);
+//#else //HS7810A or HS7819, string should not scroll
+//				strftime(timestr, 6, "%H:%M", t);
+//				struct vfd_ioctl_data data;
+//				memset(data.data, ' ', 6);
+//				memcpy (data.data, timestr, 6);
+//				data.start = 0;
+//				data.length = 5;
+//				write_to_vfd(VFDDISPLAYCHARS, &data);
+//#endif
+				if (support_text)
+				{
 					strftime(timestr, 20, "%H:%M", t);
 					ShowText(timestr);
-				} else if (support_numbers && has_led_segment) {
+				} else if (support_numbers && has_led_segment)
+				{
 					ShowNumber((t->tm_hour*100) + t->tm_min);
 #ifdef BOXMODEL_CS_HD2
 					ioctl(fd, IOC_FP_SET_COLON, 0x01);
 #endif
 				}
+#endif
 			}
 		}
 	}
-
 	int tmp_recstatus = CNeutrinoApp::getInstance()->recordingstatus;
 	if (tmp_recstatus) {
 		if(clearClock) {
@@ -754,7 +791,8 @@
 		int pp = (int) round((double) vol / (double) 2);
 		if(oldpp != pp)
 		{
-#if defined (BOXMODEL_UFS910) || defined (BOXMODEL_UFS922)
+#if defined (BOXMODEL_UFS910) \
+ || defined (BOXMODEL_UFS922)
 			int i;
 			unsigned char speaker[5] = {0x1C, 0x1C, 0x1C, 0x3E, 0x7F}; // speaker symbol
 			writeCG(0, speaker);
@@ -801,15 +839,31 @@
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL: %d%%", (int)vol);
 			ShowText(vol_chr);
-#elif defined (BOXMODEL_OCTAGON1008)
+#elif defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429)
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL=%3d", (int)vol);
 			ShowText(vol_chr);
-#elif defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7819) || defined (BOXMODEL_CUBEREVO_250HD) || defined (BOXMODEL_IPBOX55)
+#elif defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_CUBEREVO_250HD) \
+ || defined (BOXMODEL_IPBOX55)
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "v%3d", (int)vol);
 			ShowText(vol_chr);
-#elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500) || defined (BOXMODEL_UFS912) || defined (BOXMODEL_UFS913) || defined (BOXMODEL_CUBEREVO) || defined (BOXMODEL_CUBEREVO_MINI) || defined (BOXMODEL_CUBEREVO_MINI2) || defined (BOXMODEL_CUBEREVO_2000HD) || defined (BOXMODEL_CUBEREVO_3000HD) || defined (BOXMODEL_IPBOX9900) || defined (BOXMODEL_IPBOX99)
+#elif defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_UFS912) \
+ || defined (BOXMODEL_UFS913) \
+ || defined (BOXMODEL_CUBEREVO) \
+ || defined (BOXMODEL_CUBEREVO_MINI) \
+ || defined (BOXMODEL_CUBEREVO_MINI2) \
+ || defined (BOXMODEL_CUBEREVO_2000HD) \
+ || defined (BOXMODEL_CUBEREVO_3000HD) \
+ || defined (BOXMODEL_IPBOX9900) \
+ || defined (BOXMODEL_IPBOX99)
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "Volume: %d%%", (int)vol);
 			ShowText(vol_chr);
@@ -822,9 +876,11 @@
 		if(pp > 8) pp = 8;
 
 		if(force_update || oldpp != pp) {
-printf("CVFD::showVolume: %d, bar %d\n", (int) vol, pp);
 			int i;
 			int j = 0x00000200;
+
+			printf("CVFD::showVolume: %d, bar %d\n", (int) vol, pp);
+
 			for(i = 0; i < pp; i++) {
 				ShowIcon((fp_icon) j, true);
 				j /= 2;
@@ -867,9 +923,11 @@
 		if(pp > 8) pp = 8;
 
 		if(pp != ppold) {
-//printf("CVFD::showPercentOver: %d, bar %d\n", (int) perc, pp);
 			int i;
 			int j = 0x00000200;
+
+//			printf("CVFD::showPercentOver: %d, bar %d\n", (int) perc, pp);
+
 			for(i = 0; i < pp; i++) {
 				ShowIcon((fp_icon) j, true);
 				j /= 2;
@@ -899,7 +957,7 @@
 	if(fd < 0) return;
 	if (mode != MODE_AUDIO)
 		return;
-printf("CVFD::showAudioTrack: %s\n", title.c_str());
+	printf("CVFD::showAudioTrack: %s\n", title.c_str());
 	ShowText(title.c_str());
 	wake_up();
 
@@ -984,7 +1042,26 @@
 		ShowIcon(FP_ICON_COL2, false);
 	}
 #endif
-
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429)
+	else if (mode == MODE_STANDBY)
+	{
+		ShowIcon(ICON_COLON2, true);
+	}
+#elif defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7819)
+	else if (mode == MODE_STANDBY)
+	{
+		ShowIcon(ICON_COLON, true);
+	}
+#elif defined (BOXMODEL_FORTIS_HDBOX)
+	else if (mode == MODE_STANDBY)
+	{
+		ShowIcon(ICON_COLON3, true);
+	}
+#endif
 	if(strlen(title))
 		ShowText(title);
 	mode = m;
@@ -1085,7 +1162,15 @@
 int CVFD::getBrightness()
 {
 	//FIXME for old neutrino.conf
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_HS7819)
 	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] > 7)
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] = 7;
 #else
@@ -1107,7 +1192,15 @@
 int CVFD::getBrightnessStandby()
 {
 	//FIXME for old neutrino.conf
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_HS7819)
 	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] > 7)
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] = 7;
 #else
@@ -1128,7 +1221,15 @@
 int CVFD::getBrightnessDeepStandby()
 {
 	//FIXME for old neutrino.conf
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_HS7819)
 	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] > 7)
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] = 7;
 #else
@@ -1199,13 +1300,22 @@
 	else
 		text[0] = 0;
 #else
-#if defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819) || defined (BOXMODEL_CUBEREVO_250HD) || defined (BOXMODEL_IPBOX55)
+#if defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_CUBEREVO_250HD) \
+ || defined (BOXMODEL_IPBOX55)
 	ShowText("    ");
-#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
+#elif defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_TF7700)
 	ShowText("        ");
-#elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#elif defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500)
 	ShowText("            ");
-#elif defined (BOXMODEL_IPBOX9900) || defined (BOXMODEL_IPBOX99)
+#elif defined (BOXMODEL_IPBOX9900) \
+ || defined (BOXMODEL_IPBOX99)
 	ShowText("              ");
 #elif !defined (BOXMODEL_HS7110)
 	ShowText("                ");
@@ -1216,25 +1326,35 @@
 void CVFD::ShowIcon(fp_icon icon, bool show)
 {
 #if !HAVE_DUCKBOX_HARDWARE
-	if(!has_lcd || fd < 0) return;
-//printf("CVFD::ShowIcon %s %x\n", show ? "show" : "hide", (int) icon);
+	if(!has_lcd || fd < 0)
+		return;
+
+//	printf("CVFD::ShowIcon %s %02d\n", show ? "show" : "hide", (int) icon);
 	int ret = ioctl(fd, show ? IOC_FP_SET_ICON : IOC_FP_CLEAR_ICON, icon);
 	if(ret < 0)
 		perror(show ? "IOC_FP_SET_ICON" : "IOC_FP_CLEAR_ICON");
 #else
-#if defined (BOXMODEL_ATEVIO7500) || defined (BOXMODEL_HS7110) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819)
-	return;
-#endif
 	if (icon == 0)
 		return;
 
+#if !defined (BOXMODEL_OCTAGON1008) \
+ && !defined (BOXMODEL_FORTIS_HDBOX) \
+ && !defined (BOXMODEL_ATEVIO7500) \
+ && !defined (BOXMODEL_HS7420) \
+ && !defined (BOXMODEL_HS7810A) \
+ && !defined (BOXMODEL_HS7420) \
+ && !defined (BOXMODEL_HS7119) \
+ && !defined (BOXMODEL_HS7429) \
+ && !defined (BOXMODEL_HS7819)
 	if (active_icon[icon & 0x0F] == show)
 		return;
 	else
 		active_icon[icon & 0x0F] = show;
-
-	//printf("CVFD::ShowIcon %s %x\n", show ? "show" : "hide", (int) icon);
+#endif
+//	printf("CVFD::ShowIcon %s #%02d\n", show ? "show" : "hide", (int) icon);
+
 	struct vfd_ioctl_data data;
+
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
 	data.start = 0x00;
 	data.data[0] = icon;
@@ -1248,17 +1368,9 @@
 #ifdef HAVE_DUCKBOX_HARDWARE
 void CVFD::ClearIcons()
 {
-#if defined (BOXMODEL_ATEVIO7500) || defined (BOXMODEL_HS7110) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819)
-	return;
-#endif
-	for (int id = 0x10; id < FP_ICON_MAX; id++) {
-#if defined (BOXMODEL_OCTAGON1008)
+//	printf("CVFD::ClearIcons, min=%02d, max=%02d\n", FP_ICON_MIN, FP_ICON_MAX);
+	for (int id = FP_ICON_MIN; id < FP_ICON_MAX; id++) {
 		if (id != FP_ICON_USB && id != FP_ICON_HDD)
-#elif defined(BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_TF7700)
-		if (id != FP_ICON_USB)
-#else
-		if (id != 0x10 && id != 0x12)
-#endif
 			ShowIcon((fp_icon)id, false);
 	}
 	return;
@@ -1664,4 +1776,3 @@
 /*****************************************************************************************/
 #endif // VFD_UPDATE
 
-

