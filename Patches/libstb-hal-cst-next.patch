--- libstb-hal-cst-next.org/include/cs_frontpanel.h
+++ libstb-hal-cst-next/include/cs_frontpanel.h
@@ -28,7 +28,7 @@
 
 typedef enum {
 #if defined(BOXMODEL_OCTAGON1008)
-	ICON_DOLBY = 0x10,
+	ICON_DOLBY = 1,
 	ICON_DTS,
 	ICON_VIDEO,
 	ICON_AUDIO,
@@ -49,6 +49,7 @@
 	ICON_PLAY,
 	ICON_REWIND,
 	ICON_PAUSE,
+	ICON_NONE,
 	ICON_FF,
 	ICON_REC,
 	ICON_ARROW,
@@ -56,15 +57,16 @@
 	ICON_COLON2,
 	ICON_COLON3,
 	ICON_MAX,
+	FP_ICON_MIN = ICON_DOLBY,
 	FP_ICON_USB = ICON_USB,
 	FP_ICON_HD = ICON_16_9,
 	FP_ICON_HDD = ICON_HDD,
 	FP_ICON_LOCK = ICON_CRYPTED,
-	FP_ICON_BT,
-	FP_ICON_MP3,
-	FP_ICON_MUSIC,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
 	FP_ICON_DD = ICON_DOLBY,
-	FP_ICON_MAIL,
+	FP_ICON_MAIL = 0,
 	FP_ICON_MUTE = ICON_TIME,
 	FP_ICON_PLAY = ICON_PLAY,
 	FP_ICON_PAUSE = ICON_PAUSE,
@@ -72,18 +74,152 @@
 	FP_ICON_FR = ICON_REWIND,
 	FP_ICON_REC = ICON_REC,
 	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_TIMESHIFT = 0,
 	FP_ICON_RADIO = ICON_AUDIO,
 	FP_ICON_TV = ICON_VIDEO,
 	FP_ICON_DOWNLOAD = ICON_LINK,
 	FP_ICON_CAM1 = ICON_REC,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_HS7420) \
+ || defined(BOXMODEL_HS7429)
+	ICON_DOT = 1,
+	ICON_COLON1,
+	ICON_COLON2,
+	ICON_COLON3,
+	ICON_MAX,
+	FP_ICON_MIN = ICON_DOT,
+	FP_ICON_USB = 0,
+	FP_ICON_HD = 0,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = 0,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = 0,
+	FP_ICON_PLAY = 0,
+	FP_ICON_PAUSE = 0,
+	FP_ICON_FF = 0,
+	FP_ICON_FR = 0,
+	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = 0,
+	FP_ICON_TIMESHIFT = 0,
+	FP_ICON_RADIO = 0,
+	FP_ICON_TV = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_HS7119)
+	ICON_COLON = 1,     // 01
+	FP_ICON_MIN = ICON_COLON,
+	FP_ICON_USB = 0,
+	FP_ICON_HD = 0,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = 0,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = 0,
+	FP_ICON_PLAY = 0,
+	FP_ICON_PAUSE = 0,
+	FP_ICON_FF = 0,
+	FP_ICON_FR = 0,
+	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = 0,
+	FP_ICON_TIMESHIFT = 0,
+	FP_ICON_RADIO = 0,
+	FP_ICON_TV = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_COLON
+#elif defined(BOXMODEL_ATEVIO7500)
+	ICON_STANDBY = 1, // 01
+	ICON_REC,         // 02
+	ICON_TIMESHIFT,   // 03
+	ICON_TIMER,       // 04
+	ICON_HD,          // 05
+	ICON_USB,         // 06
+	ICON_SCRAMBLED,   // 07
+	ICON_DOLBY,       // 08
+	ICON_MUTE,        // 09
+	ICON_TUNER1,      // 10
+	ICON_TUNER2,      // 11
+	ICON_MP3,         // 12
+	ICON_REPEAT,      // 13
+	ICON_PLAY,        // 14
+	ICON_STOP,        // 15
+	ICON_PAUSE,       // 16
+	ICON_REWIND,      // 17
+	ICON_FF,          // 18
+	ICON_STEP_BACK,   // 19
+	ICON_STEP_FWD,    // 20
+	ICON_TV,          // 21
+	ICON_RADIO,       // 22
+	ICON_MAX,         // 23
+	FP_ICON_MIN = ICON_STANDBY,
+	FP_ICON_USB = ICON_USB,
+	FP_ICON_HD = ICON_HD,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = ICON_SCRAMBLED,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = ICON_MP3,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = ICON_DOLBY,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = ICON_MUTE,
+	FP_ICON_PLAY = ICON_PLAY,
+	FP_ICON_PAUSE = ICON_PAUSE,
+	FP_ICON_FF = ICON_FF,
+	FP_ICON_FR = ICON_REWIND,
+	FP_ICON_REC = ICON_REC,
+	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_TIMESHIFT = ICON_TIMESHIFT,
+	FP_ICON_RADIO = ICON_RADIO,
+	FP_ICON_TV = ICON_TV,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_HS7810A) \
+ || defined(BOXMODEL_HS7819)
+	ICON_COLON = 1, // 01
+	ICON_PERIOD1,   // 02
+	ICON_PERIOD2,   // 03
+	ICON_PERIOD3,   // 04
+	ICON_MAX,       // 05
+	FP_ICON_MIN = ICON_COLON,
+	FP_ICON_USB = 0,
+	FP_ICON_HD = 0,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = 0,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = 0,
+	FP_ICON_PLAY = 0,
+	FP_ICON_PAUSE = 0,
+	FP_ICON_FF = 0,
+	FP_ICON_FR = 0,
+	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = 0,
+	FP_ICON_TIMESHIFT = 0,
+	FP_ICON_RADIO = 0,
+	FP_ICON_TV = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_MAX
 #elif defined(BOXMODEL_FORTIS_HDBOX)
-	ICON_USB = 0x10,
-	ICON_STANDBY,
+	ICON_STANDBY = 1,
 	ICON_SAT,
 	ICON_REC,
 	ICON_TIMESHIFT,
 	ICON_TIMER,
 	ICON_HD,
+	ICON_USB,
 	ICON_SCRAMBLED,
 	ICON_DOLBY,
 	ICON_MUTE,
@@ -92,15 +228,6 @@
 	ICON_MP3,
 	ICON_REPEAT,
 	ICON_Play,
-	ICON_TER,
-	ICON_FILE,
-	ICON_480i,
-	ICON_480p,
-	ICON_576i,
-	ICON_576p,
-	ICON_720p,
-	ICON_1080i,
-	ICON_1080p,
 	ICON_Circ0,
 	ICON_Circ1,
 	ICON_Circ2,
@@ -110,6 +237,15 @@
 	ICON_Circ6,
 	ICON_Circ7,
 	ICON_Circ8,
+	ICON_FILE,
+	ICON_TER,
+	ICON_480i,
+	ICON_480p,
+	ICON_576i,
+	ICON_576p,
+	ICON_720p,
+	ICON_1080i,
+	ICON_1080p,
 	ICON_COLON1,
 	ICON_COLON2,
 	ICON_COLON3,
@@ -117,6 +253,7 @@
 	ICON_TV,
 	ICON_RADIO,
 	ICON_MAX,
+	FP_ICON_MIN = ICON_STANDBY,
 	FP_ICON_USB = ICON_USB,
 	FP_ICON_REC = ICON_REC,
 	FP_ICON_CAM1 = ICON_REC,
@@ -138,8 +275,84 @@
 	FP_ICON_TV = ICON_TV,
 	FP_ICON_MUSIC = ICON_RADIO,
 	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_TF7700)
+	ICON_CD1 = 32,
+	ICON_CD2,
+	ICON_CD3,
+	ICON_CD4,
+	ICON_CD5,
+	ICON_CD6,
+	ICON_CD7,
+	ICON_CD8,
+	ICON_CD9,
+	ICON_CDCENTER,
+	ICON_HDD = 48,
+	ICON_HDD_1,
+	ICON_HDD_2,
+	ICON_HDD_3,
+	ICON_HDD_4,
+	ICON_HDD_5,
+	ICON_HDD_6,
+	ICON_HDD_7,
+	ICON_HDD_8,
+	ICON_HDD_FRAME,
+	ICON_HDD_FULL,
+	ICON_MP3 = 64,
+	ICON_AC3,
+	ICON_TIMESHIFT,
+	ICON_TV,
+	ICON_MUSIC,
+	ICON_DISH,
+	ICON_REC,
+	ICON_TUNER1,
+	ICON_TUNER2,
+	ICON_RWD,
+	ICON_STEPBACK,
+	ICON_PLAY,
+	ICON_STEPFWD,
+	ICON_FWD,
+	ICON_PAUSE,
+	ICON_MUTE,
+	ICON_AUTOREWLEFT,
+	ICON_AUTOREWRIGHT,
+	ICON_DOLLAR,
+	ICON_ATTN,
+	ICON_DOLBY,
+	ICON_NETWORK,
+	ICON_AM,
+	ICON_TIMER,
+	ICON_PM,
+	ICON_IRDOT,
+	ICON_POWER,
+	ICON_COLON,
+	ICON_MAX,
+	FP_ICON_MIN = ICON_CD1,
+	FP_ICON_USB = 0,
+	FP_ICON_REC = ICON_REC,
+	FP_ICON_RECORD = ICON_REC,
+	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_HD = ICON_NETWORK,
+	FP_ICON_LOCK = ICON_DOLLAR,
+	FP_ICON_DD = ICON_DOLBY,
+	FP_ICON_MUTE = ICON_MUTE,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = ICON_MP3,
+	FP_ICON_PLAY = ICON_PLAY,
+	FP_ICON_PAUSE = ICON_PAUSE,
+	FP_ICON_HDD = 0,
+	FP_ICON_MUSIC = ICON_MUSIC,
+	FP_ICON_MAIL = 0,
+	FP_ICON_FF = ICON_FWD,
+	FP_ICON_FR = ICON_RWD,
+	FP_ICON_RADIO = ICON_MUSIC,
+	FP_ICON_TV = ICON_TV,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_TIMESHIFT = ICON_TIMESHIFT,
+	FP_ICON_MAX = ICON_MAX
 #elif defined(BOXMODEL_UFS910) || defined(BOXMODEL_UFS922) || defined(BOXMODEL_UFS912) || defined(BOXMODEL_UFS913)
 	FP_ICON_USB = 0x10,
+	FP_ICON_MIN= FP_ICON_USB,
 	FP_ICON_HD,
 	FP_ICON_HDD,
 	FP_ICON_LOCK,
@@ -218,9 +431,9 @@
 	FP_ICON_TV = 0,
 	FP_ICON_MAIL = 0,
 	FP_ICON_BT = 0,
-
 #else
 	FP_ICON_USB = 0x10,
+	FP_ICON_MIN= FP_ICON_USB,
 	FP_ICON_HD,
 	FP_ICON_HDD,
 	FP_ICON_LOCK,
@@ -242,8 +455,21 @@
 	FP_ICON_RECORD = FP_ICON_REC,
 	FP_ICON_DOWNLOAD,
 	FP_ICON_TIMESHIFT,
-#endif
-#if !defined(BOXMODEL_UFS910) && !defined(BOXMODEL_UFS922) && !defined(BOXMODEL_UFS912) && !defined(BOXMODEL_UFS913) && !defined(BOXMODEL_FORTIS_HDBOX)
+//#endif
+//#if !defined(BOXMODEL_TF7700) \
+// && !defined(BOXMODEL_UFS910) \
+// && !defined(BOXMODEL_UFS922) \
+// && !defined(BOXMODEL_UFS912) \
+// && !defined(BOXMODEL_UFS913) \
+// && !defined(BOXMODEL_FORTIS_HDBOX) \
+// && !defined(BOXMODEL_OCTAGON1008) \
+// && !defined(BOXMODEL_ATEVIO7500) \
+// && !defined(BOXMODEL_HS7110) \
+// && !defined(BOXMODEL_HS7420) \
+// && !defined(BOXMODEL_HS7810A) \
+// && !defined(BOXMODEL_HS7119) \
+// && !defined(BOXMODEL_HS7429) \
+// && !defined(BOXMODEL_HS7819)
 	FP_ICON_MAX
 #endif
 } fp_icon;
--- libstb-hal-cst-next.org/libduckbox/hardware_caps.c
+++ libstb-hal-cst-next/libduckbox/hardware_caps.c
@@ -118,6 +118,15 @@
 			caps.can_cec = 1;
 			caps.has_fan = 0;
 		}
+		else if (!strncmp(buf, "hs7420", 6)) {
+			strcpy(caps.boxvendor, "DUCKBOX");
+			strcpy(caps.boxname, buf);
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 1;
+			caps.has_fan = 0;
+		}
 		else if (!strncmp(buf, "hs7810a", 7)) {
 			strcpy(caps.boxvendor, "DUCKBOX");
 			strcpy(caps.boxname, buf);
@@ -128,6 +137,15 @@
 			caps.has_fan = 0;
 		}
 		else if (!strncmp(buf, "hs7119", 6)) {
+			strcpy(caps.boxvendor, "DUCKBOX");
+			strcpy(caps.boxname, buf);
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 1;
+			caps.has_fan = 0;
+		}
+		else if (!strncmp(buf, "hs7429", 6)) {
 			strcpy(caps.boxvendor, "DUCKBOX");
 			strcpy(caps.boxname, buf);
 			caps.can_shutdown = 1;
--- libstb-hal-cst-next/tools/spark_fp.c.org
+++ libstb-hal-cst-next/tools/spark_fp.c
@@ -30,6 +30,10 @@
 #include <time.h>
 #include <unistd.h>
 #include <sys/ioctl.h>
+
+struct semaphore {
+	int dummy;
+};
 #include <aotom_main.h>
 
 #define FP_DEV "/dev/vfd"
@@ -38,7 +42,7 @@
 {
 	printf("usage spark_fp <option>\n");
 	printf("\t-g: get wakeup reason (return code == reason)\n");
-	printf("\t-T: get FP display type (1 = VFD, 2 = LCD, 4 = LED, 8 = LBD)\n");
+	printf("\t-T: get FP display type (1 = VFD, 2 = LCD, 3 = DVFD, 4 = LED, 8 = LBD)\n");
 	printf("\t-t: get current FP time\n");
 	printf("\t-s <time>: set FP time (time = 0: use current time)\n");
 	printf("\t-w <time>: set FP wakeup time (time = 1: no wakeup)\n");
@@ -129,6 +133,7 @@
 	struct aotom_ioctl_data aotom;
 	memset(&aotom, 0, sizeof(aotom));
 	int ret, c, val;
+	YWPANEL_Version_t version;
 	time_t t, t2, diff;
 	struct tm *tmp;
 	int period = LOG_ON;
@@ -245,13 +250,17 @@
 				ioctl(fd, VFDICONDISPLAYONOFF, &aotom);
 				break;
 			case 'T':
-				ret = ioctl(fd, VFDGETVERSION, &val);
+				ret = ioctl(fd, VFDGETVERSION, &version);
 				if (ret < 0)
 					perror("ioctl VFDGETVERSION");
 				else
 				{
-					printf("%d\n", val);
-					ret = val;
+					printf("Displaytype is %d\n", version.DisplayInfo);
+//					if (version.DisplayInfo == 3) //if DVFD
+//					{
+//						return 1; //return VFD
+//					}
+					ret = version.DisplayInfo;
 				}
 				break;
 // Reminder to myself, here's a semi-sane default for Pingulux boxes:
--- libstb-hal-cst-next/libspark/hardware_caps.c.org
+++ libstb-hal-cst-next/libspark/hardware_caps.c
@@ -14,6 +14,10 @@
 #include <string.h>
 #include <unistd.h>
 #include <sys/ioctl.h>
+
+struct semaphore {
+	int dummy;
+};
 #include <aotom_main.h>
 
 #include <hardware_caps.h>
@@ -42,15 +46,29 @@
 	const char *tmp;
 	char buf[1024];
 	int len = -1, ret, val;
+	YWPANEL_Version_t version;
 	int fd = open (FP_DEV, O_RDWR);
 	if (fd != -1) {
-		ret = ioctl(fd, VFDGETVERSION, &val);
+		ret = ioctl(fd, VFDGETVERSION, &version);
 		if (ret < 0)
 			fprintf(stderr, "[hardware_caps] %s: VFDGETVERSION %m\n", __func__);
-		else if (val & 1) { /* VFD = 1, DVFD = 3 */
+		else if (version.DisplayInfo == 1) { /* VFD = 1 */
 			caps.display_type = HW_DISPLAY_LINE_TEXT;
 			caps.display_xres = 8;
 			caps.can_set_display_brightness = 1;
+		}
+		else if (version.DisplayInfo == 3) { /* DVFD = 3 */
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			ret = ioctl(fd, VFDGETDISPLAYTIME, &val);
+			if (val == 1)
+			{
+				caps.display_xres = 10;
+			}
+			else
+			{
+				caps.display_xres = 16;
+			}
+ 			caps.can_set_display_brightness = 1;
 		}
 		close(fd);
 	}

